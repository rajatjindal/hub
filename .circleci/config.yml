version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/hub

  dependencies:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build app
          command: yarn build
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist

  test:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test:unit

  # auto deploy on S3 --- leave it for later
  # deploy:
  #   docker:
  #     - image: cibuilds/aws:latest
  #   working_directory: ~/hub
  #   steps:
  #     - restore_cache:
  #         key: v1-dist-{{ .Environment.CIRCLE_SHA1 }}
  #     - run:
  #         name: Deploy to S3
  #         command: aws s3 sync /home/circleci/hub/dist s3://recipient-id --delete --acl public-read
  #     - run:
  #         name: Invalidate cache
  #         command: aws cloudfront create-invalidation --distribution-id ID --paths /

workflows:
  version: 2
  build-and-test:
    jobs:
      - checkout_code
      - dependencies:
          requires:
          - checkout_code
      - test:
          requires:
            - dependencies
      - build:
          requires:
            - dependencies
      # - hold:
      #     type: approval
      #     requires:
      #       - build
      #       - test
      #     filters:
      #       branches:
      #         only: master
      # the deploy step of the workflow
      # - deploy:
      #     requires:
      #       - hold
      #     filters:
      #       branches:
      #         only: master
